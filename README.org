* pndconf
  :PROPERTIES:
  :CUSTOM_ID: pndconf
  :END:

  Pandoc configuration manager, file watcher and document generator.

  Automatic conversion of markdown to various formats with pre defined
  settings via templates and folder watch with preview.

** Installation
   :PROPERTIES:
   :CUSTOM_ID: installation
   :END:

   Can be installed via pip by ~pip install https://github.com/akshaybadola/pndconf~.

** Usage
   :PROPERTIES:
   :CUSTOM_ID: usage
   :END:

   - ~pndconf -i ".md" -g pdf,html,reveal~ watches all directories and
     subdirectories for ~.md~ files and compiles if it notices any changes
     to ~pdf~, ~html~ and ~reveal~ format.
   - ~pandoc~ is used for generation and should be in the current path.
     ~pandoc~ switches for the formats are stored in a configuration file
     in ~ini~ format.
   - If no config file is provided then a default config is used.
   - See ~pndconf --help~ for a list of options.

   By default it runs and watches for file system changes. You can also run
   once with ~-ro~ switch.

** Pandoc installation
   :PROPERTIES:
   :CUSTOM_ID: pandoc-installation
   :END:

   - You can either install ~pandoc~ through your distribution

     - ~apt-get install pandoc,{-citeproc,-data}~ for debian/ubuntu
     - ~dnf install pandoc,{-citeproc,-common}~ for fedora See your
       distribution packages for others.

   - You can also install via ~cabal-install~ for the latest version

     - ~pandoc-2.14.2~ has citeproc inbuilt and has some extra features
       which are quite useful
     - While installing via ~cabal-install~ it's preferable to update your
       haskell compiler first to the latest version.
     - For GHC use at least ~8.8.2~

       - Then do ~cabal update cabal-install~ first
       - Then ~cabal update pandoc~

** Templates and CSL
   :PROPERTIES:
   :CUSTOM_ID: templates-and-csl
   :END:

   ~pandoc~ comes with default templates which can be used for simple
   document generation. However if you need to customize it you can search
   for other templates. Path to the templates directory can be specified
   via ~--templates-dir~ option.

   If no ~templates-dir~ is given and a template is specified it's searched
   in the following order: - Absolute path of the template - In the same
   path as the input file(s). - A ~templates~ directory if it exists, in
   the same directory as the input file(s)

   A ~beamer.template~ is present in examples directory to help in
   generating a beamer document. CSL files are searched in a similar
   manner.

   A compendium of citation styles is available at [[https://github.com/citation-style-language/styles][styles]]. You can
   either clone the repository or download the required style files to a
   directory and give the path to ~pndconf~ with ~--csl-dir~.

** Examples
   :PROPERTIES:
   :CUSTOM_ID: examples
   :END:

   A couple of examples are provided in the ~examples~ directory. After
   installation run: - ~pndconf -g pdf~ This will watch for all markdown
   files and generate an article for each of them as they change
   - ~pndconf --input-files beamer.md -g beamer~.
     This requires a beamer template which is included in the ~templates~ directory.
   - ~pndconf -ro --input-files beamer.md -g beamer~.
     This does not watch the filesystem for changes and only generates the beamer slides.

   You can check the input files and the metadata there. ~beamer.md~
   specifies the beamer template for generation and also ~ieee~ csl file.
   That is also included in the ~csl~ directory.

* Configuration
  :PROPERTIES:
  :CUSTOM_ID: configuration
  :END:

  A sensible default configuration is included in the distribution but it
  can always be customized.

* Todo
  :PROPERTIES:
  :CUSTOM_ID: todo
  :END:

  - [X] Remove the settings folder from the repo. It should be standalone.
  - [X] Remove blog generator as that's a separate repo now.
  - [ ] Fix include and exclude regex options.
  - [ ] Clean the code up
  - [ ] Better colorization possibly with colorama
  - [ ] A WSGI server for async communication
  - [ ] Add documentation of internals
  - [ ] Add tests
  - [ ] Issue warning when incompatible options are used, e.g.Â --biblatex
    and pandoc-citeproc conflict.
